!function (e, t) {
  let i = t(e, e.document, Date);
  e.lazySizes = i;
  if ("object" == typeof module && module.exports) {
    module.exports = i;
  }
}("undefined" != typeof window ? window : {}, function e(t, i, l) {
  "use strict";

  let s;
  let a;
  !function () {
    let e;
    let i = {
      lazyClass: "lazyload",
      loadedClass: "lazyloaded",
      loadingClass: "lazyloading",
      preloadClass: "lazypreload",
      errorClass: "lazyerror",
      autosizesClass: "lazyautosizes",
      fastLoadedClass: "ls-is-cached",
      iframeLoadMode: 0,
      srcAttr: "data-src",
      srcsetAttr: "data-srcset",
      sizesAttr: "data-sizes",
      minSize: 40,
      customMedia: {},
      init: true,
      expFactor: 1.5,
      hFac: .8,
      loadMode: 2,
      loadHidden: true,
      ricTimeout: 0,
      throttleDelay: 125
    };
    a = t.lazySizesConfig || t.lazysizesConfig || {};
    for (e in i) if (!(e in a)) {
      a[e] = i[e];
    }
  }();
  if (!i || !i.getElementsByClassName) {
    return {
      init: function () {},
      cfg: a,
      noSupport: true
    };
  }
  let n = i.documentElement;
  let o = t.HTMLPictureElement;
  let d = t.addEventListener.bind(t);
  let u = t.setTimeout;
  let f = t.requestAnimationFrame || u;
  let h = t.requestIdleCallback;
  let g = /^picture$/i;
  let m = ["load", "error", "lazyincluded", "_lazyloaded"];
  let $ = {};
  let z = function (e, t) {
    if (!$[t]) {
      $[t] = RegExp("(\\s|^)" + t + "(\\s|$)");
    }
    return $[t].test(e.getAttribute("class") || "") && $[t];
  };
  let y = function (e, t) {
    if (!z(e, t)) {
      e.setAttribute("class", (e.getAttribute("class") || "").trim() + " " + t);
    }
  };
  let p = function (e, t) {
    let i;
    if (i = z(e, t)) {
      e.setAttribute("class", (e.getAttribute("class") || "").replace(i, " "));
    }
  };
  let b = function (e, t, i) {
    let l = i ? "addEventListener" : "removeEventListener";
    if (i) {
      b(e, t);
    }
    for (let s = 0; s < m.length; s++) {
      let a = m[s];
      e[l](a, t);
    }
  };
  let C = function (e, t, l, a, n) {
    let o = i.createEvent("Event");
    if (!l) {
      l = {};
    }
    l.instance = s;
    o.initEvent(t, !a, !n);
    o.detail = l;
    e.dispatchEvent(o);
    return o;
  };
  let A = function (e, i) {
    let l;
    if (!o && (l = t.picturefill || a.pf)) {
      if (i && i.src && !e.getAttribute("srcset")) {
        e.setAttribute("srcset", i.src);
      }
      l({
        reevaluate: true,
        elements: [e]
      });
    } else if (i && i.src) {
      e.src = i.src;
    }
  };
  let E = function (e, t, i) {
    for (i = i || e.offsetWidth; i < a.minSize && t && !e._lazysizesWidth;) {
      i = t.offsetWidth;
      t = t.parentNode;
    }
    return i;
  };
  let _;
  let w;
  let L;
  let N;
  let M;
  let W;
  let x;
  N = [];
  M = L = [];
  W = function () {
    let e = M;
    M = L.length ? N : L;
    _ = true;
    for (w = false; e.length;) {
      e.shift()();
    }
    _ = false;
  };
  (x = function (e, t) {
    if (_ && !t) {
      e.apply(this, arguments);
    } else {
      M.push(e);
      if (!w) {
        w = true;
        (i.hidden ? u : f)(W);
      }
    }
  })._lsFlush = W;
  let S = function (e, t) {
    return t ? function () {
      x(e);
    } : function () {
      let t = this;
      x(function () {
        e.apply(t, arguments);
      });
    };
  };
  let T = function (e) {
    let t;
    let i = 0;
    let s = a.throttleDelay;
    let n = a.ricTimeout;
    let o = function () {
      t = false;
      i = l.now();
      e();
    };
    let r = h && n > 49 ? function () {
      h(o, {
        timeout: n
      });
      if (n !== a.ricTimeout) {
        n = a.ricTimeout;
      }
    } : S(function () {
      u(o);
    }, true);
    return function (e) {
      let a;
      if (e = true === e) {
        n = 33;
      }
      if (!t) {
        t = true;
        if ((a = s - (l.now() - i)) < 0) {
          a = 0;
        }
        if (e || a < 9) {
          r();
        } else {
          u(r, a);
        }
      }
    };
  };
  let F = function (e) {
    let t;
    let i;
    let s = function () {
      t = null;
      e();
    };
    let a = function () {
      let e = l.now() - i;
      if (e < 99) {
        u(a, 99 - e);
      } else {
        (h || s)(s);
      }
    };
    return function () {
      i = l.now();
      if (!t) {
        t = u(a, 99);
      }
    };
  };
  let R;
  let H;
  let k;
  let D;
  let P;
  let O;
  let q;
  let I;
  let U;
  let j;
  let Z;
  let G;
  let J;
  let K;
  let Q;
  let X;
  let Y;
  let ee;
  let et;
  let ei;
  let el;
  let es;
  let ea;
  let en;
  let eo;
  let er;
  let ec;
  let ed;
  let eu;
  let ef;
  let eh;
  let eg;
  let em;
  let e$;
  let ez;
  J = /^img$/i;
  K = /^iframe$/i;
  Q = "onscroll" in t && !/(gle|ing)bot/.test(navigator.userAgent);
  0;
  X = 0;
  Y = 0;
  ee = -1;
  et = function (e) {
    Y--;
    if (!(e && !(Y < 0) && e.target)) {
      Y = 0;
    }
  };
  ei = function (e) {
    if (null == G) {
      G = "hidden" == (getComputedStyle(i.body, null) || {}).visibility;
    }
    return G || !("hidden" == (getComputedStyle(e.parentNode, null) || {}).visibility && "hidden" == (getComputedStyle(e, null) || {}).visibility);
  };
  el = function (e, t) {
    let l;
    let s = e;
    let a = ei(e);
    I -= t;
    Z += t;
    U -= t;
    for (j += t; a && (s = s.offsetParent) && s != i.body && s != n;) {
      if ((a = ((getComputedStyle(s, null) || {}).opacity || 1) > 0) && "visible" != (getComputedStyle(s, null) || {}).overflow) {
        a = j > (l = s.getBoundingClientRect()).left && U < l.right && Z > l.top - 1 && I < l.bottom + 1;
      }
    }
    return a;
  };
  es = function () {
    let e;
    let t;
    let l;
    let o;
    let r;
    let d;
    let u;
    let f;
    let h;
    let g;
    let m;
    let $;
    let z = s.elements;
    if ((D = a.loadMode) && Y < 8 && (e = z.length)) {
      t = 0;
      for (ee++; t < e; t++) {
        if (z[t] && !z[t]._lazyRace) {
          if (!Q || s.prematureUnveil && s.prematureUnveil(z[t])) {
            eg(z[t]);
            continue;
          }
          if (!((f = z[t].getAttribute("data-expand")) && (d = 1 * f))) {
            d = X;
          }
          if (!g) {
            g = !a.expand || a.expand < 1 ? n.clientHeight > 500 && n.clientWidth > 500 ? 500 : 370 : a.expand;
            s._defEx = g;
            m = g * a.expFactor;
            $ = a.hFac;
            G = null;
            if (X < m && Y < 1 && ee > 2 && D > 2 && !i.hidden) {
              X = m;
              ee = 0;
            } else {
              X = D > 1 && ee > 1 && Y < 6 ? g : 0;
            }
          }
          if (h !== d) {
            O = innerWidth + d * $;
            q = innerHeight + d;
            u = -1 * d;
            h = d;
          }
          if ((Z = (l = z[t].getBoundingClientRect()).bottom) >= u && (I = l.top) <= q && (j = l.right) >= u * $ && (U = l.left) <= O && (Z || j || U || I) && (a.loadHidden || ei(z[t])) && (H && Y < 3 && !f && (D < 3 || ee < 4) || el(z[t], d))) {
            eg(z[t]);
            r = true;
            if (Y > 9) {
              break;
            }
          } else if (!r && H && !o && Y < 4 && ee < 4 && D > 2 && (R[0] || a.preloadAfterLoad) && (R[0] || !f && (Z || j || U || I || "auto" != z[t].getAttribute(a.sizesAttr)))) {
            o = R[0] || z[t];
          }
        }
      }
      if (o && !r) {
        eg(o);
      }
    }
  };
  ea = false;
  en = function () {
    if (!ea) {
      ea = true;
      f(function () {
        ea = false;
        es();
      });
    }
  };
  eo = T(es);
  ec = S(er = function (e) {
    let t = e.target;
    if (t._lazyCache) {
      delete t._lazyCache;
      return;
    }
    et(e);
    y(t, a.loadedClass);
    p(t, a.loadingClass);
    b(t, ed);
    let i = t.closest && t.closest(".Lazy");
    if (i) {
      i.classList.remove("Lazy");
    }
    let l = t.closest && t.closest(".post-image");
    if (l) {
      l.classList.add("ElementLoaded");
    }
    if (t.dataset && t.dataset.src) {
      t.removeAttribute("data-src");
    }
    C(t, "lazyloaded");
  });
  ed = function (e) {
    ec({
      target: e.target
    });
  };
  eu = function (e, t) {
    let i = e.getAttribute("data-load-mode") || a.iframeLoadMode;
    if (0 == i) {
      e.contentWindow.location.replace(t);
    } else if (1 == i) {
      e.src = t;
    }
  };
  ef = function (e) {
    let t;
    let i = e.getAttribute(a.srcsetAttr);
    if (t = a.customMedia[e.getAttribute("data-media") || e.getAttribute("media")]) {
      e.setAttribute("media", t);
    }
    if (i) {
      e.setAttribute("srcset", i);
    }
  };
  eh = S(function (e, t, l, s, n) {
    let o;
    let r;
    let d;
    let f;
    let h;
    let m;
    let $;
    let z;
    let v = true;
    if (!(h = C(e, "lazybeforeunveil", t)).defaultPrevented) {
      if (s) {
        if (l) {
          y(e, a.autosizesClass);
        } else {
          e.setAttribute("sizes", s);
        }
      }
      if (!e.closest(".img-logo") && e.hasAttribute("width") && e.hasAttribute("height")) {
        $ = Math.ceil(e.getAttribute("width"));
        z = Math.ceil(e.getAttribute("height"));
      } else if (e.hasAttribute("data-original-width") && e.hasAttribute("data-original-height")) {
        $ = Math.ceil(e.getAttribute("data-original-width"));
        z = Math.ceil(e.getAttribute("data-original-height"));
      } else if (e.closest(".img-logo")) {
        $ = z = 800;
        v = false;
      } else {
        let E = e.closest(".image");
        if (E) {
          $ = Math.ceil(E.offsetWidth);
          z = Math.ceil(E.offsetHeight);
        } else {
          $ = e.offsetWidth || 400;
          z = e.offsetHeight || 300;
        }
      }
      r = e.getAttribute(a.srcsetAttr);
      o = resizeImg(e.getAttribute(a.srcAttr), $, z, v);
      e.setAttribute("width", $);
      e.setAttribute("height", z);
      if (n) {
        f = (d = e.parentNode) && g.test(d.nodeName || "");
      }
      m = t.firesLoad || "src" in e && (r || o || f);
      h = {
        target: e
      };
      y(e, a.loadingClass);
      if (m) {
        clearTimeout(k);
        k = u(et, 2500);
        b(e, ed, true);
      }
      if (f) {
        for (let _ = 0; _ < d.getElementsByTagName("source").length; _++) {
          let w = d.getElementsByTagName("source")[_];
          ef(w);
        }
      }
      if (r) {
        e.setAttribute("srcset", r);
      } else if (o && !f) {
        if (K.test(e.nodeName)) {
          eu(e, o);
        } else if (supWeb) {
          let L = i.createElement("picture");
          let N = i.createElement("source");
          N.setAttribute("srcset", o.replace(/\.[a-zA-Z0-9]+$/, ".webp"));
          N.setAttribute("type", "image/webp");
          let M = e.parentNode;
          M.replaceChild(L, e);
          L.appendChild(N);
          L.appendChild(e);
          e.src = o;
        } else {
          e.src = o;
        }
      }
      if (n && (r || f)) {
        A(e, {
          src: o
        });
      }
    }
    if (e._lazyRace) {
      delete e._lazyRace;
    }
    p(e, a.lazyClass);
    x(function () {
      let t = e.complete && e.naturalWidth > 1;
      if (!m || t) {
        if (t) {
          y(e, a.fastLoadedClass);
        }
        er(h);
        e._lazyCache = true;
        u(function () {
          if ("_lazyCache" in e) {
            delete e._lazyCache;
          }
        }, 9);
      }
      if ("lazy" == e.loading) {
        Y--;
      }
    }, true);
  });
  eg = function (e) {
    if (e._lazyRace) {
      return;
    }
    let t;
    let i = J.test(e.nodeName);
    let l = i && (e.getAttribute(a.sizesAttr) || e.getAttribute("sizes"));
    let s = "auto" == l;
    if (!((s || !H) && i && (e.getAttribute("src") || e.srcset) && !e.complete && !z(e, a.errorClass) && z(e, a.lazyClass))) {
      t = C(e, "lazyunveilread").detail;
      if (s) {
        ev.updateElem(e, true, e.offsetWidth);
      }
      e._lazyRace = true;
      Y++;
      eh(e, t, s, l, i);
    }
  };
  em = F(function () {
    a.loadMode = 3;
    eo();
  });
  e$ = function () {
    if (3 == a.loadMode) {
      a.loadMode = 2;
    }
    em();
  };
  ez = function () {
    if (!H) {
      if (l.now() - P < 999) {
        u(ez, 999);
        return;
      }
      H = true;
      a.loadMode = 3;
      eo();
      d("scroll", e$, true);
    }
  };
  let ey = {
    _: function () {
      P = l.now();
      s.elements = i.getElementsByClassName(a.lazyClass);
      R = i.getElementsByClassName(a.lazyClass + " " + a.preloadClass);
      d("scroll", en, true);
      d("resize", en, true);
      d("pageshow", function (e) {
        if (e.persisted) {
          let t = i.querySelectorAll("." + a.loadingClass);
          if (t.length && t.forEach) {
            f(function () {
              for (let e = 0; e < t.length; e++) {
                let i = t[e];
                if (i.complete) {
                  eg(i);
                }
              }
            });
          }
        }
      });
      if (t.MutationObserver) {
        new MutationObserver(eo).observe(n, {
          childList: true,
          subtree: true,
          attributes: true
        });
      } else {
        n.addEventListener("DOMNodeInserted", eo, true);
        n.addEventListener("DOMAttrModified", eo, true);
        setInterval(eo, 999);
      }
      d("hashchange", eo, true);
      for (let e = 0; e < 6; e++) {
        let o = ["focus", "mouseover", "click", "load", "transitionend", "animationend"][e];
        i.addEventListener(o, eo, true);
      }
      if (/d$|^c/.test(i.readyState)) {
        ez();
      } else {
        d("load", ez);
        i.addEventListener("DOMContentLoaded", eo);
        u(ez, 2e4);
      }
      if (s.elements.length) {
        es();
        x._lsFlush();
      } else {
        eo();
      }
    },
    checkElems: en,
    unveil: eg,
    _aLSL: e$
  };
  let ep;
  let eb;
  let eC;
  let eA;
  eb = S(function (e, t, i, l) {
    let s;
    let a;
    let n;
    e._lazysizesWidth = l;
    l += "px";
    e.setAttribute("sizes", l);
    if (g.test(t.nodeName || "")) {
      a = 0;
      for (n = (s = t.getElementsByTagName("source")).length; a < n; a++) {
        s[a].setAttribute("sizes", l);
      }
    }
    if (!i.detail.dataAttr) {
      A(e, i.detail);
    }
  });
  eC = function (e, t, i) {
    let l;
    let s = e.parentNode;
    if (s) {
      i = E(e, s, i);
      if (!(l = C(e, "lazybeforesizes", {
        width: i,
        dataAttr: !!t
      })).defaultPrevented && (i = l.detail.width) && i !== e._lazysizesWidth) {
        eb(e, s, l, i);
      }
    }
  };
  let ev = {
    _: function () {
      ep = i.getElementsByClassName(a.autosizesClass);
      d("resize", eA);
    },
    checkElems: eA = F(function () {
      let e;
      let t = ep.length;
      if (t) {
        for (e = 0; e < t; e++) {
          eC(ep[e]);
        }
      }
    }),
    updateElem: eC
  };
  let eE = function () {
    if (!eE.i && i.getElementsByClassName) {
      eE.i = true;
      ev._();
      ey._();
    }
  };
  u(function () {
    if (a.init) {
      eE();
    }
  });
  return s = {
    cfg: a,
    autoSizer: ev,
    loader: ey,
    init: eE,
    uP: A,
    aC: y,
    rC: p,
    hC: z,
    fire: C,
    gW: E,
    rAF: x
  };
});
